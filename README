orchastack-core

orchastack-core endeavors to make OSGI as a full featured container for distributed application, 
including JTA, JPA, security supports and MQ client for Kafka and rabbitMQ. 
It's build on iPOJO, which is a service framework for OSGI.

Java developers just write pojo with annotaions like:

   @Component 
   @Provides(specifications = { orchastack.core.itest.biz.UserJpaService.class }) 
   @Instantiate public class CopyOfUserJpaServiceImpl implements UserJpaService {

   @PersistenceContext(unitName = "orcha-entity")
   private EntityManager persist;

   @RequiresRoles(value = "admins")
   @Transactional(timeout = 4000, propagation = "requires")
   public CloudUser1 saveWithTx(CloudUser1 user) throws Exception {

      ......
    }
   ..........
 
then orchastack help you to inject the whole dependencies.

And also a simple ESB is provided to enable standalone OSGI container as distributed. Some code 
in container A may access a OSGI service resides in container B, just like the OSGI service resides in container A.
With the help this simple ESB, you may scale your OSGI application at will.

Karaf fatures are provided in orchastack.core.features project, which help you to deploy orchastack-core in Karaf.
