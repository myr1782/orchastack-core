[main]
#authc.loginUrl = /login.jsp
#authc.successUrl = /home.jsp

# password matcher
#sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
#sha256Matcher.hashAlgorithmName=SHA-256
#sha256Matcher.hashIterations=500000
#passwordMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
passwordMatcher = org.apache.shiro.authc.credential.SimpleCredentialsMatcher
#passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
#passwordMatcher.passwordService = $passwordService

#ds = com.jolbox.bonecp.BoneCPDataSource
#ds.driverClass=com.mysql.jdbc.Driver
#ds.jdbcUrl=jdbc:mysql://localhost:3306/simple_shiro_web_app
#ds.username = root
#ds.password = 123qwe

ds = org.apache.shiro.jndi.JndiObjectFactory
ds.resourceName = osgi:service/javax.sql.DataSource/(osgi.jndi.service.name=jdbc/orchaDS)
ds.requiredType = javax.sql.DataSource

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = true

jdbcRealm.authenticationQuery = SELECT passwd FROM stack.USERS WHERE username = ?
jdbcRealm.userRolesQuery = SELECT role_name FROM stack.USERS_ROLES WHERE username = ?
jdbcRealm.permissionsQuery = SELECT permission_name FROM stack.ROLES_PERMISSIONS WHERE role_name = ?
jdbcRealm.credentialsMatcher = $passwordMatcher
jdbcRealm.dataSource=$ds

#authenticator = orchastack.core.security.manager.WsDomainAuthenticator
#securityManager.authenticator = $authenticator

securityManager.realms = $jdbcRealm
securityManager.rememberMeManager.cipherKey = kPH+bIxk5D2deZiIxcaaaA==

authcStrategy = org.apache.shiro.authc.pam.FirstSuccessfulStrategy
securityManager.authenticator.authenticationStrategy = $authcStrategy

#cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
#securityManager.cacheManager = $cacheManager
#jdbcRealm.authenticationCachingEnabled = true

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager

#[urls]
# The /login.jsp is not restricted to authenticated users (otherwise no one could log in!), but
# the 'authc' filter must still be specified for it so it can process that url's
# login submissions. It is 'smart' enough to allow those requests through as specified by the
# shiro.loginUrl above.
#/login.jsp = authc
#/home.jsp = anon, authc
#/logout = logout
#/account/** = authc

sessionDAO = org.apache.shiro.session.mgt.eis.CachingSessionDAO
# This name matches a cache name in ehcache.xml:
sessionDAO.activeSessionsCacheName = shiro-activeSessionsCache
securityManager.sessionManager.sessionDAO = $sessionDAO

# Configure The CacheManager:
#cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
cacheManager = orchastack.core.security.shiro.ext.zk.ZooKeeperManager
cacheManager.cacheManagerConfigFile = classpath:orchastack/core/security/manager/zk/ehcache.xml
cacheManager.zkConnectString=localhost:2181

# Configure the above CacheManager on Shiro's SecurityManager
# to use it for all of Shiro's caching needs:
securityManager.cacheManager = $cacheManager